C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     -2*Epsilon(1,2,3,-2)*P(-2,3)*P(-1,1)*P(-1,2) -
C      2*Epsilon(1,2,3,-2)*P(-2,2)*P(-1,1)*P(-1,3) -
C      2*Epsilon(1,2,3,-2)*P(-2,1)*P(-1,2)*P(-1,3) +
C      Epsilon(2,3,-1,-2)*P(-2,3)*P(-1,1)*P(1,2) - Epsilon(2,3,-1,-2)*P
C     (-2,1)*P(-1,3)*P(1,2) + Epsilon(2,3,-1,-2)*P(-2,2)*P(-1,1)*P(1,3)
C      - Epsilon(2,3,-1,-2)*P(-2,1)*P(-1,2)*P(1,3) -
C      Epsilon(1,3,-1,-2)*P(-2,3)*P(-1,2)*P(2,1) + Epsilon(1,3,-1,-2)*P
C     (-2,2)*P(-1,3)*P(2,1) + Epsilon(1,3,-1,-2)*P(-2,2)*P(-1,1)*P(2,3)
C      - Epsilon(1,3,-1,-2)*P(-2,1)*P(-1,2)*P(2,3) -
C      Epsilon(1,2,-1,-2)*P(-2,3)*P(-1,2)*P(3,1) + Epsilon(1,2,-1,-2)*P
C     (-2,2)*P(-1,3)*P(3,1) - Epsilon(1,2,-1,-2)*P(-2,3)*P(-1,1)*P(3,2)
C      + Epsilon(1,2,-1,-2)*P(-2,1)*P(-1,3)*P(3,2) -
C      (Epsilon(3,-1,-2,-3)*P(-3,3)*P(-2,2)*P(-1,1)*Metric(1,2))/2. +
C      (Epsilon(3,-1,-2,-3)*P(-3,3)*P(-2,1)*P(-1,2)*Metric(1,2))/2. -
C      (Epsilon(3,-1,-2,-3)*P(-3,2)*P(-2,1)*P(-1,3)*Metric(1,2))/2. +
C      (Epsilon(3,-1,-2,-3)*P(-3,1)*P(-2,2)*P(-1,3)*Metric(1,2))/2. +
C      (Epsilon(2,-1,-2,-3)*P(-3,2)*P(-2,3)*P(-1,1)*Metric(1,3))/2. +
C      (Epsilon(2,-1,-2,-3)*P(-3,3)*P(-2,1)*P(-1,2)*Metric(1,3))/2. -
C      (Epsilon(2,-1,-2,-3)*P(-3,1)*P(-2,3)*P(-1,2)*Metric(1,3))/2. -
C      (Epsilon(2,-1,-2,-3)*P(-3,2)*P(-2,1)*P(-1,3)*Metric(1,3))/2. -
C      (Epsilon(1,-1,-2,-3)*P(-3,3)*P(-2,2)*P(-1,1)*Metric(2,3))/2. +
C      (Epsilon(1,-1,-2,-3)*P(-3,2)*P(-2,3)*P(-1,1)*Metric(2,3))/2. -
C      (Epsilon(1,-1,-2,-3)*P(-3,1)*P(-2,3)*P(-1,2)*Metric(2,3))/2. +
C      (Epsilon(1,-1,-2,-3)*P(-3,1)*P(-2,2)*P(-1,3)*Metric(2,3))/2.
C     
      SUBROUTINE VVV3_0(V1, V2, V3, COUP,VERTEX)
      IMPLICIT NONE
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      COMPLEX*16 TMP39
      COMPLEX*16 TMP10
      COMPLEX*16 TMP6
      REAL*8 P3(0:3)
      COMPLEX*16 TMP21
      COMPLEX*16 TMP5
      COMPLEX*16 TMP14
      COMPLEX*16 TMP28
      COMPLEX*16 TMP25
      COMPLEX*16 TMP9
      COMPLEX*16 TMP18
      COMPLEX*16 TMP33
      COMPLEX*16 V3(*)
      COMPLEX*16 TMP11
      REAL*8 P2(0:3)
      COMPLEX*16 TMP36
      COMPLEX*16 TMP20
      COMPLEX*16 TMP26
      COMPLEX*16 TMP15
      COMPLEX*16 TMP4
      COMPLEX*16 TMP13
      COMPLEX*16 TMP34
      COMPLEX*16 TMP24
      COMPLEX*16 TMP19
      COMPLEX*16 TMP3
      COMPLEX*16 V2(*)
      COMPLEX*16 TMP12
      REAL*8 P1(0:3)
      COMPLEX*16 TMP2
      COMPLEX*16 TMP23
      COMPLEX*16 TMP7
      COMPLEX*16 TMP16
      COMPLEX*16 TMP30
      COMPLEX*16 VERTEX
      COMPLEX*16 TMP27
      COMPLEX*16 TMP37
      COMPLEX*16 V1(*)
      COMPLEX*16 TMP35
      COMPLEX*16 TMP38
      COMPLEX*16 TMP22
      COMPLEX*16 TMP17
      COMPLEX*16 TMP40
      COMPLEX*16 TMP32
      COMPLEX*16 TMP29
      COMPLEX*16 COUP
      COMPLEX*16 TMP31
      COMPLEX*16 TMP8
      P1(0) = DBLE(V1(1))
      P1(1) = DBLE(V1(2))
      P1(2) = DIMAG(V1(2))
      P1(3) = DIMAG(V1(1))
      P2(0) = DBLE(V2(1))
      P2(1) = DBLE(V2(2))
      P2(2) = DIMAG(V2(2))
      P2(3) = DIMAG(V2(1))
      P3(0) = DBLE(V3(1))
      P3(1) = DBLE(V3(2))
      P3(2) = DIMAG(V3(2))
      P3(3) = DIMAG(V3(1))
      TMP24 = (-1D0)*(P1(0)*(P2(1)*(V3(6)*V1(5)-V3(5)*V1(6))+(P2(2)
     $ *(V3(4)*V1(6)-V3(6)*V1(4))+P2(3)*(V3(5)*V1(4)-V3(4)*V1(5))))
     $ +(P1(1)*(P2(0)*(V3(5)*V1(6)-V3(6)*V1(5))+(P2(2)*(V3(6)*V1(3)
     $ -V3(3)*V1(6))+P2(3)*(V3(3)*V1(5)-V3(5)*V1(3))))+(P1(2)*(P2(0)
     $ *(V3(6)*V1(4)-V3(4)*V1(6))+(P2(1)*(V3(3)*V1(6)-V3(6)*V1(3))
     $ +P2(3)*(V3(4)*V1(3)-V3(3)*V1(4))))+P1(3)*(P2(0)*(V3(4)*V1(5)
     $ -V3(5)*V1(4))+(P2(1)*(V3(5)*V1(3)-V3(3)*V1(5))+P2(2)*(V3(3)
     $ *V1(4)-V3(4)*V1(3)))))))
      TMP25 = (-1D0)*(P2(0)*(P3(1)*(V2(5)*V1(6)-V2(6)*V1(5))+(P3(2)
     $ *(V2(6)*V1(4)-V2(4)*V1(6))+P3(3)*(V2(4)*V1(5)-V2(5)*V1(4))))
     $ +(P2(1)*(P3(0)*(V2(6)*V1(5)-V2(5)*V1(6))+(P3(2)*(V2(3)*V1(6)
     $ -V2(6)*V1(3))+P3(3)*(V2(5)*V1(3)-V2(3)*V1(5))))+(P2(2)*(P3(0)
     $ *(V2(4)*V1(6)-V2(6)*V1(4))+(P3(1)*(V2(6)*V1(3)-V2(3)*V1(6))
     $ +P3(3)*(V2(3)*V1(4)-V2(4)*V1(3))))+P2(3)*(P3(0)*(V2(5)*V1(4)
     $ -V2(4)*V1(5))+(P3(1)*(V2(3)*V1(5)-V2(5)*V1(3))+P3(2)*(V2(4)
     $ *V1(3)-V2(3)*V1(4)))))))
      TMP26 = (-1D0)*(P2(0)*(P3(1)*(V2(6)*V1(5)-V2(5)*V1(6))+(P3(2)
     $ *(V2(4)*V1(6)-V2(6)*V1(4))+P3(3)*(V2(5)*V1(4)-V2(4)*V1(5))))
     $ +(P2(1)*(P3(0)*(V2(5)*V1(6)-V2(6)*V1(5))+(P3(2)*(V2(6)*V1(3)
     $ -V2(3)*V1(6))+P3(3)*(V2(3)*V1(5)-V2(5)*V1(3))))+(P2(2)*(P3(0)
     $ *(V2(6)*V1(4)-V2(4)*V1(6))+(P3(1)*(V2(3)*V1(6)-V2(6)*V1(3))
     $ +P3(3)*(V2(4)*V1(3)-V2(3)*V1(4))))+P2(3)*(P3(0)*(V2(4)*V1(5)
     $ -V2(5)*V1(4))+(P3(1)*(V2(5)*V1(3)-V2(3)*V1(5))+P3(2)*(V2(3)
     $ *V1(4)-V2(4)*V1(3)))))))
      TMP27 = (-1D0)*(P1(0)*(P3(1)*(V2(5)*V1(6)-V2(6)*V1(5))+(P3(2)
     $ *(V2(6)*V1(4)-V2(4)*V1(6))+P3(3)*(V2(4)*V1(5)-V2(5)*V1(4))))
     $ +(P1(1)*(P3(0)*(V2(6)*V1(5)-V2(5)*V1(6))+(P3(2)*(V2(3)*V1(6)
     $ -V2(6)*V1(3))+P3(3)*(V2(5)*V1(3)-V2(3)*V1(5))))+(P1(2)*(P3(0)
     $ *(V2(4)*V1(6)-V2(6)*V1(4))+(P3(1)*(V2(6)*V1(3)-V2(3)*V1(6))
     $ +P3(3)*(V2(3)*V1(4)-V2(4)*V1(3))))+P1(3)*(P3(0)*(V2(5)*V1(4)
     $ -V2(4)*V1(5))+(P3(1)*(V2(3)*V1(5)-V2(5)*V1(3))+P3(2)*(V2(4)
     $ *V1(3)-V2(3)*V1(4)))))))
      TMP20 = (-1D0)*(P1(0)*(P2(1)*(V3(6)*V2(5)-V3(5)*V2(6))+(P2(2)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+P2(3)*(V3(5)*V2(4)-V3(4)*V2(5))))
     $ +(P1(1)*(P2(0)*(V3(5)*V2(6)-V3(6)*V2(5))+(P2(2)*(V3(6)*V2(3)
     $ -V3(3)*V2(6))+P2(3)*(V3(3)*V2(5)-V3(5)*V2(3))))+(P1(2)*(P2(0)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+(P2(1)*(V3(3)*V2(6)-V3(6)*V2(3))
     $ +P2(3)*(V3(4)*V2(3)-V3(3)*V2(4))))+P1(3)*(P2(0)*(V3(4)*V2(5)
     $ -V3(5)*V2(4))+(P2(1)*(V3(5)*V2(3)-V3(3)*V2(5))+P2(2)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))))
      TMP21 = (-1D0)*(P2(0)*(P3(1)*(V3(5)*V1(6)-V3(6)*V1(5))+(P3(2)
     $ *(V3(6)*V1(4)-V3(4)*V1(6))+P3(3)*(V3(4)*V1(5)-V3(5)*V1(4))))
     $ +(P2(1)*(P3(0)*(V3(6)*V1(5)-V3(5)*V1(6))+(P3(2)*(V3(3)*V1(6)
     $ -V3(6)*V1(3))+P3(3)*(V3(5)*V1(3)-V3(3)*V1(5))))+(P2(2)*(P3(0)
     $ *(V3(4)*V1(6)-V3(6)*V1(4))+(P3(1)*(V3(6)*V1(3)-V3(3)*V1(6))
     $ +P3(3)*(V3(3)*V1(4)-V3(4)*V1(3))))+P2(3)*(P3(0)*(V3(5)*V1(4)
     $ -V3(4)*V1(5))+(P3(1)*(V3(3)*V1(5)-V3(5)*V1(3))+P3(2)*(V3(4)
     $ *V1(3)-V3(3)*V1(4)))))))
      TMP22 = (-1D0)*(P2(0)*(P3(1)*(V3(6)*V1(5)-V3(5)*V1(6))+(P3(2)
     $ *(V3(4)*V1(6)-V3(6)*V1(4))+P3(3)*(V3(5)*V1(4)-V3(4)*V1(5))))
     $ +(P2(1)*(P3(0)*(V3(5)*V1(6)-V3(6)*V1(5))+(P3(2)*(V3(6)*V1(3)
     $ -V3(3)*V1(6))+P3(3)*(V3(3)*V1(5)-V3(5)*V1(3))))+(P2(2)*(P3(0)
     $ *(V3(6)*V1(4)-V3(4)*V1(6))+(P3(1)*(V3(3)*V1(6)-V3(6)*V1(3))
     $ +P3(3)*(V3(4)*V1(3)-V3(3)*V1(4))))+P2(3)*(P3(0)*(V3(4)*V1(5)
     $ -V3(5)*V1(4))+(P3(1)*(V3(5)*V1(3)-V3(3)*V1(5))+P3(2)*(V3(3)
     $ *V1(4)-V3(4)*V1(3)))))))
      TMP23 = (-1D0)*(P1(0)*(P2(1)*(V3(5)*V1(6)-V3(6)*V1(5))+(P2(2)
     $ *(V3(6)*V1(4)-V3(4)*V1(6))+P2(3)*(V3(4)*V1(5)-V3(5)*V1(4))))
     $ +(P1(1)*(P2(0)*(V3(6)*V1(5)-V3(5)*V1(6))+(P2(2)*(V3(3)*V1(6)
     $ -V3(6)*V1(3))+P2(3)*(V3(5)*V1(3)-V3(3)*V1(5))))+(P1(2)*(P2(0)
     $ *(V3(4)*V1(6)-V3(6)*V1(4))+(P2(1)*(V3(6)*V1(3)-V3(3)*V1(6))
     $ +P2(3)*(V3(3)*V1(4)-V3(4)*V1(3))))+P1(3)*(P2(0)*(V3(5)*V1(4)
     $ -V3(4)*V1(5))+(P2(1)*(V3(3)*V1(5)-V3(5)*V1(3))+P2(2)*(V3(4)
     $ *V1(3)-V3(3)*V1(4)))))))
      TMP28 = (-1D0)*(P1(0)*(P3(1)*(V2(6)*V1(5)-V2(5)*V1(6))+(P3(2)
     $ *(V2(4)*V1(6)-V2(6)*V1(4))+P3(3)*(V2(5)*V1(4)-V2(4)*V1(5))))
     $ +(P1(1)*(P3(0)*(V2(5)*V1(6)-V2(6)*V1(5))+(P3(2)*(V2(6)*V1(3)
     $ -V2(3)*V1(6))+P3(3)*(V2(3)*V1(5)-V2(5)*V1(3))))+(P1(2)*(P3(0)
     $ *(V2(6)*V1(4)-V2(4)*V1(6))+(P3(1)*(V2(3)*V1(6)-V2(6)*V1(3))
     $ +P3(3)*(V2(4)*V1(3)-V2(3)*V1(4))))+P1(3)*(P3(0)*(V2(4)*V1(5)
     $ -V2(5)*V1(4))+(P3(1)*(V2(5)*V1(3)-V2(3)*V1(5))+P3(2)*(V2(3)
     $ *V1(4)-V2(4)*V1(3)))))))
      TMP40 = (-1D0)*(P1(0)*(P2(1)*(P3(3)*V1(5)-P3(2)*V1(6))+(P2(2)
     $ *(P3(1)*V1(6)-P3(3)*V1(4))+P2(3)*(P3(2)*V1(4)-P3(1)*V1(5))))
     $ +(P1(1)*(P2(0)*(P3(2)*V1(6)-P3(3)*V1(5))+(P2(2)*(P3(3)*V1(3)
     $ -P3(0)*V1(6))+P2(3)*(P3(0)*V1(5)-P3(2)*V1(3))))+(P1(2)*(P2(0)
     $ *(P3(3)*V1(4)-P3(1)*V1(6))+(P2(1)*(P3(0)*V1(6)-P3(3)*V1(3))
     $ +P2(3)*(P3(1)*V1(3)-P3(0)*V1(4))))+P1(3)*(P2(0)*(P3(1)*V1(5)
     $ -P3(2)*V1(4))+(P2(1)*(P3(2)*V1(3)-P3(0)*V1(5))+P2(2)*(P3(0)
     $ *V1(4)-P3(1)*V1(3)))))))
      TMP15 = (-1D0)*(P2(0)*(V1(4)*(V3(6)*V2(5)-V3(5)*V2(6))+(V1(5)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+V1(6)*(V3(5)*V2(4)-V3(4)*V2(5))))
     $ +(P2(1)*(V1(3)*(V3(5)*V2(6)-V3(6)*V2(5))+(V1(5)*(V3(6)*V2(3)
     $ -V3(3)*V2(6))+V1(6)*(V3(3)*V2(5)-V3(5)*V2(3))))+(P2(2)*(V1(3)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+(V1(4)*(V3(3)*V2(6)-V3(6)*V2(3))
     $ +V1(6)*(V3(4)*V2(3)-V3(3)*V2(4))))+P2(3)*(V1(3)*(V3(4)*V2(5)
     $ -V3(5)*V2(4))+(V1(4)*(V3(5)*V2(3)-V3(3)*V2(5))+V1(5)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))))
      TMP14 = (-1D0)*(P3(0)*(V1(4)*(V3(6)*V2(5)-V3(5)*V2(6))+(V1(5)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+V1(6)*(V3(5)*V2(4)-V3(4)*V2(5))))
     $ +(P3(1)*(V1(3)*(V3(5)*V2(6)-V3(6)*V2(5))+(V1(5)*(V3(6)*V2(3)
     $ -V3(3)*V2(6))+V1(6)*(V3(3)*V2(5)-V3(5)*V2(3))))+(P3(2)*(V1(3)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+(V1(4)*(V3(3)*V2(6)-V3(6)*V2(3))
     $ +V1(6)*(V3(4)*V2(3)-V3(3)*V2(4))))+P3(3)*(V1(3)*(V3(4)*V2(5)
     $ -V3(5)*V2(4))+(V1(4)*(V3(5)*V2(3)-V3(3)*V2(5))+V1(5)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))))
      TMP17 = (-1D0)*(P1(0)*(P3(1)*(V3(5)*V2(6)-V3(6)*V2(5))+(P3(2)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+P3(3)*(V3(4)*V2(5)-V3(5)*V2(4))))
     $ +(P1(1)*(P3(0)*(V3(6)*V2(5)-V3(5)*V2(6))+(P3(2)*(V3(3)*V2(6)
     $ -V3(6)*V2(3))+P3(3)*(V3(5)*V2(3)-V3(3)*V2(5))))+(P1(2)*(P3(0)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+(P3(1)*(V3(6)*V2(3)-V3(3)*V2(6))
     $ +P3(3)*(V3(3)*V2(4)-V3(4)*V2(3))))+P1(3)*(P3(0)*(V3(5)*V2(4)
     $ -V3(4)*V2(5))+(P3(1)*(V3(3)*V2(5)-V3(5)*V2(3))+P3(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))))
      TMP16 = (-1D0)*(P1(0)*(V1(4)*(V3(6)*V2(5)-V3(5)*V2(6))+(V1(5)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+V1(6)*(V3(5)*V2(4)-V3(4)*V2(5))))
     $ +(P1(1)*(V1(3)*(V3(5)*V2(6)-V3(6)*V2(5))+(V1(5)*(V3(6)*V2(3)
     $ -V3(3)*V2(6))+V1(6)*(V3(3)*V2(5)-V3(5)*V2(3))))+(P1(2)*(V1(3)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+(V1(4)*(V3(3)*V2(6)-V3(6)*V2(3))
     $ +V1(6)*(V3(4)*V2(3)-V3(3)*V2(4))))+P1(3)*(V1(3)*(V3(4)*V2(5)
     $ -V3(5)*V2(4))+(V1(4)*(V3(5)*V2(3)-V3(3)*V2(5))+V1(5)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))))
      TMP11 = (V3(3)*V1(3)-V3(4)*V1(4)-V3(5)*V1(5)-V3(6)*V1(6))
      TMP10 = (P3(0)*P1(0)-P3(1)*P1(1)-P3(2)*P1(2)-P3(3)*P1(3))
      TMP35 = (-1D0)*(P1(0)*(P2(1)*(P3(2)*V2(6)-P3(3)*V2(5))+(P2(2)
     $ *(P3(3)*V2(4)-P3(1)*V2(6))+P2(3)*(P3(1)*V2(5)-P3(2)*V2(4))))
     $ +(P1(1)*(P2(0)*(P3(3)*V2(5)-P3(2)*V2(6))+(P2(2)*(P3(0)*V2(6)
     $ -P3(3)*V2(3))+P2(3)*(P3(2)*V2(3)-P3(0)*V2(5))))+(P1(2)*(P2(0)
     $ *(P3(1)*V2(6)-P3(3)*V2(4))+(P2(1)*(P3(3)*V2(3)-P3(0)*V2(6))
     $ +P2(3)*(P3(0)*V2(4)-P3(1)*V2(3))))+P1(3)*(P2(0)*(P3(2)*V2(4)
     $ -P3(1)*V2(5))+(P2(1)*(P3(0)*V2(5)-P3(2)*V2(3))+P2(2)*(P3(1)
     $ *V2(3)-P3(0)*V2(4)))))))
      TMP12 = (P2(0)*P1(0)-P2(1)*P1(1)-P2(2)*P1(2)-P2(3)*P1(3))
      TMP29 = (-1D0)*(P1(0)*(P2(1)*(V3(6)*P3(2)-V3(5)*P3(3))+(P2(2)
     $ *(V3(4)*P3(3)-V3(6)*P3(1))+P2(3)*(V3(5)*P3(1)-V3(4)*P3(2))))
     $ +(P1(1)*(P2(0)*(V3(5)*P3(3)-V3(6)*P3(2))+(P2(2)*(V3(6)*P3(0)
     $ -V3(3)*P3(3))+P2(3)*(V3(3)*P3(2)-V3(5)*P3(0))))+(P1(2)*(P2(0)
     $ *(V3(6)*P3(1)-V3(4)*P3(3))+(P2(1)*(V3(3)*P3(3)-V3(6)*P3(0))
     $ +P2(3)*(V3(4)*P3(0)-V3(3)*P3(1))))+P1(3)*(P2(0)*(V3(4)*P3(2)
     $ -V3(5)*P3(1))+(P2(1)*(V3(5)*P3(0)-V3(3)*P3(2))+P2(2)*(V3(3)
     $ *P3(1)-V3(4)*P3(0)))))))
      TMP39 = (-1D0)*(P1(0)*(P2(1)*(P3(2)*V1(6)-P3(3)*V1(5))+(P2(2)
     $ *(P3(3)*V1(4)-P3(1)*V1(6))+P2(3)*(P3(1)*V1(5)-P3(2)*V1(4))))
     $ +(P1(1)*(P2(0)*(P3(3)*V1(5)-P3(2)*V1(6))+(P2(2)*(P3(0)*V1(6)
     $ -P3(3)*V1(3))+P2(3)*(P3(2)*V1(3)-P3(0)*V1(5))))+(P1(2)*(P2(0)
     $ *(P3(1)*V1(6)-P3(3)*V1(4))+(P2(1)*(P3(3)*V1(3)-P3(0)*V1(6))
     $ +P2(3)*(P3(0)*V1(4)-P3(1)*V1(3))))+P1(3)*(P2(0)*(P3(2)*V1(4)
     $ -P3(1)*V1(5))+(P2(1)*(P3(0)*V1(5)-P3(2)*V1(3))+P2(2)*(P3(1)
     $ *V1(3)-P3(0)*V1(4)))))))
      TMP38 = (-1D0)*(P1(0)*(P2(1)*(P3(3)*V1(5)-P3(2)*V1(6))+(P2(2)
     $ *(P3(1)*V1(6)-P3(3)*V1(4))+P2(3)*(P3(2)*V1(4)-P3(1)*V1(5))))
     $ +(P1(1)*(P2(0)*(P3(2)*V1(6)-P3(3)*V1(5))+(P2(2)*(P3(3)*V1(3)
     $ -P3(0)*V1(6))+P2(3)*(P3(0)*V1(5)-P3(2)*V1(3))))+(P1(2)*(P2(0)
     $ *(P3(3)*V1(4)-P3(1)*V1(6))+(P2(1)*(P3(0)*V1(6)-P3(3)*V1(3))
     $ +P2(3)*(P3(1)*V1(3)-P3(0)*V1(4))))+P1(3)*(P2(0)*(P3(1)*V1(5)
     $ -P3(2)*V1(4))+(P2(1)*(P3(2)*V1(3)-P3(0)*V1(5))+P2(2)*(P3(0)
     $ *V1(4)-P3(1)*V1(3)))))))
      TMP19 = (-1D0)*(P1(0)*(P2(1)*(V3(5)*V2(6)-V3(6)*V2(5))+(P2(2)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+P2(3)*(V3(4)*V2(5)-V3(5)*V2(4))))
     $ +(P1(1)*(P2(0)*(V3(6)*V2(5)-V3(5)*V2(6))+(P2(2)*(V3(3)*V2(6)
     $ -V3(6)*V2(3))+P2(3)*(V3(5)*V2(3)-V3(3)*V2(5))))+(P1(2)*(P2(0)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+(P2(1)*(V3(6)*V2(3)-V3(3)*V2(6))
     $ +P2(3)*(V3(3)*V2(4)-V3(4)*V2(3))))+P1(3)*(P2(0)*(V3(5)*V2(4)
     $ -V3(4)*V2(5))+(P2(1)*(V3(3)*V2(5)-V3(5)*V2(3))+P2(2)*(V3(4)
     $ *V2(3)-V3(3)*V2(4)))))))
      TMP18 = (-1D0)*(P1(0)*(P3(1)*(V3(6)*V2(5)-V3(5)*V2(6))+(P3(2)
     $ *(V3(4)*V2(6)-V3(6)*V2(4))+P3(3)*(V3(5)*V2(4)-V3(4)*V2(5))))
     $ +(P1(1)*(P3(0)*(V3(5)*V2(6)-V3(6)*V2(5))+(P3(2)*(V3(6)*V2(3)
     $ -V3(3)*V2(6))+P3(3)*(V3(3)*V2(5)-V3(5)*V2(3))))+(P1(2)*(P3(0)
     $ *(V3(6)*V2(4)-V3(4)*V2(6))+(P3(1)*(V3(3)*V2(6)-V3(6)*V2(3))
     $ +P3(3)*(V3(4)*V2(3)-V3(3)*V2(4))))+P1(3)*(P3(0)*(V3(4)*V2(5)
     $ -V3(5)*V2(4))+(P3(1)*(V3(5)*V2(3)-V3(3)*V2(5))+P3(2)*(V3(3)
     $ *V2(4)-V3(4)*V2(3)))))))
      TMP33 = (-1D0)*(P1(0)*(P2(1)*(P3(3)*V2(5)-P3(2)*V2(6))+(P2(2)
     $ *(P3(1)*V2(6)-P3(3)*V2(4))+P2(3)*(P3(2)*V2(4)-P3(1)*V2(5))))
     $ +(P1(1)*(P2(0)*(P3(2)*V2(6)-P3(3)*V2(5))+(P2(2)*(P3(3)*V2(3)
     $ -P3(0)*V2(6))+P2(3)*(P3(0)*V2(5)-P3(2)*V2(3))))+(P1(2)*(P2(0)
     $ *(P3(3)*V2(4)-P3(1)*V2(6))+(P2(1)*(P3(0)*V2(6)-P3(3)*V2(3))
     $ +P2(3)*(P3(1)*V2(3)-P3(0)*V2(4))))+P1(3)*(P2(0)*(P3(1)*V2(5)
     $ -P3(2)*V2(4))+(P2(1)*(P3(2)*V2(3)-P3(0)*V2(5))+P2(2)*(P3(0)
     $ *V2(4)-P3(1)*V2(3)))))))
      TMP32 = (-1D0)*(P1(0)*(P2(1)*(V3(5)*P3(3)-V3(6)*P3(2))+(P2(2)
     $ *(V3(6)*P3(1)-V3(4)*P3(3))+P2(3)*(V3(4)*P3(2)-V3(5)*P3(1))))
     $ +(P1(1)*(P2(0)*(V3(6)*P3(2)-V3(5)*P3(3))+(P2(2)*(V3(3)*P3(3)
     $ -V3(6)*P3(0))+P2(3)*(V3(5)*P3(0)-V3(3)*P3(2))))+(P1(2)*(P2(0)
     $ *(V3(4)*P3(3)-V3(6)*P3(1))+(P2(1)*(V3(6)*P3(0)-V3(3)*P3(3))
     $ +P2(3)*(V3(3)*P3(1)-V3(4)*P3(0))))+P1(3)*(P2(0)*(V3(5)*P3(1)
     $ -V3(4)*P3(2))+(P2(1)*(V3(3)*P3(2)-V3(5)*P3(0))+P2(2)*(V3(4)
     $ *P3(0)-V3(3)*P3(1)))))))
      TMP31 = (-1D0)*(P1(0)*(P2(1)*(V3(6)*P3(2)-V3(5)*P3(3))+(P2(2)
     $ *(V3(4)*P3(3)-V3(6)*P3(1))+P2(3)*(V3(5)*P3(1)-V3(4)*P3(2))))
     $ +(P1(1)*(P2(0)*(V3(5)*P3(3)-V3(6)*P3(2))+(P2(2)*(V3(6)*P3(0)
     $ -V3(3)*P3(3))+P2(3)*(V3(3)*P3(2)-V3(5)*P3(0))))+(P1(2)*(P2(0)
     $ *(V3(6)*P3(1)-V3(4)*P3(3))+(P2(1)*(V3(3)*P3(3)-V3(6)*P3(0))
     $ +P2(3)*(V3(4)*P3(0)-V3(3)*P3(1))))+P1(3)*(P2(0)*(V3(4)*P3(2)
     $ -V3(5)*P3(1))+(P2(1)*(V3(5)*P3(0)-V3(3)*P3(2))+P2(2)*(V3(3)
     $ *P3(1)-V3(4)*P3(0)))))))
      TMP30 = (-1D0)*(P1(0)*(P2(1)*(V3(5)*P3(3)-V3(6)*P3(2))+(P2(2)
     $ *(V3(6)*P3(1)-V3(4)*P3(3))+P2(3)*(V3(4)*P3(2)-V3(5)*P3(1))))
     $ +(P1(1)*(P2(0)*(V3(6)*P3(2)-V3(5)*P3(3))+(P2(2)*(V3(3)*P3(3)
     $ -V3(6)*P3(0))+P2(3)*(V3(5)*P3(0)-V3(3)*P3(2))))+(P1(2)*(P2(0)
     $ *(V3(4)*P3(3)-V3(6)*P3(1))+(P2(1)*(V3(6)*P3(0)-V3(3)*P3(3))
     $ +P2(3)*(V3(3)*P3(1)-V3(4)*P3(0))))+P1(3)*(P2(0)*(V3(5)*P3(1)
     $ -V3(4)*P3(2))+(P2(1)*(V3(3)*P3(2)-V3(5)*P3(0))+P2(2)*(V3(4)
     $ *P3(0)-V3(3)*P3(1)))))))
      TMP37 = (-1D0)*(P1(0)*(P2(1)*(P3(2)*V1(6)-P3(3)*V1(5))+(P2(2)
     $ *(P3(3)*V1(4)-P3(1)*V1(6))+P2(3)*(P3(1)*V1(5)-P3(2)*V1(4))))
     $ +(P1(1)*(P2(0)*(P3(3)*V1(5)-P3(2)*V1(6))+(P2(2)*(P3(0)*V1(6)
     $ -P3(3)*V1(3))+P2(3)*(P3(2)*V1(3)-P3(0)*V1(5))))+(P1(2)*(P2(0)
     $ *(P3(1)*V1(6)-P3(3)*V1(4))+(P2(1)*(P3(3)*V1(3)-P3(0)*V1(6))
     $ +P2(3)*(P3(0)*V1(4)-P3(1)*V1(3))))+P1(3)*(P2(0)*(P3(2)*V1(4)
     $ -P3(1)*V1(5))+(P2(1)*(P3(0)*V1(5)-P3(2)*V1(3))+P2(2)*(P3(1)
     $ *V1(3)-P3(0)*V1(4)))))))
      TMP36 = (-1D0)*(P1(0)*(P2(1)*(P3(2)*V2(6)-P3(3)*V2(5))+(P2(2)
     $ *(P3(3)*V2(4)-P3(1)*V2(6))+P2(3)*(P3(1)*V2(5)-P3(2)*V2(4))))
     $ +(P1(1)*(P2(0)*(P3(3)*V2(5)-P3(2)*V2(6))+(P2(2)*(P3(0)*V2(6)
     $ -P3(3)*V2(3))+P2(3)*(P3(2)*V2(3)-P3(0)*V2(5))))+(P1(2)*(P2(0)
     $ *(P3(1)*V2(6)-P3(3)*V2(4))+(P2(1)*(P3(3)*V2(3)-P3(0)*V2(6))
     $ +P2(3)*(P3(0)*V2(4)-P3(1)*V2(3))))+P1(3)*(P2(0)*(P3(2)*V2(4)
     $ -P3(1)*V2(5))+(P2(1)*(P3(0)*V2(5)-P3(2)*V2(3))+P2(2)*(P3(1)
     $ *V2(3)-P3(0)*V2(4)))))))
      TMP13 = (V3(3)*V2(3)-V3(4)*V2(4)-V3(5)*V2(5)-V3(6)*V2(6))
      TMP34 = (-1D0)*(P1(0)*(P2(1)*(P3(3)*V2(5)-P3(2)*V2(6))+(P2(2)
     $ *(P3(1)*V2(6)-P3(3)*V2(4))+P2(3)*(P3(2)*V2(4)-P3(1)*V2(5))))
     $ +(P1(1)*(P2(0)*(P3(2)*V2(6)-P3(3)*V2(5))+(P2(2)*(P3(3)*V2(3)
     $ -P3(0)*V2(6))+P2(3)*(P3(0)*V2(5)-P3(2)*V2(3))))+(P1(2)*(P2(0)
     $ *(P3(3)*V2(4)-P3(1)*V2(6))+(P2(1)*(P3(0)*V2(6)-P3(3)*V2(3))
     $ +P2(3)*(P3(1)*V2(3)-P3(0)*V2(4))))+P1(3)*(P2(0)*(P3(1)*V2(5)
     $ -P3(2)*V2(4))+(P2(1)*(P3(2)*V2(3)-P3(0)*V2(5))+P2(2)*(P3(0)
     $ *V2(4)-P3(1)*V2(3)))))))
      TMP9 = (P3(0)*P2(0)-P3(1)*P2(1)-P3(2)*P2(2)-P3(3)*P2(3))
      TMP8 = (V2(3)*V1(3)-V2(4)*V1(4)-V2(5)*V1(5)-V2(6)*V1(6))
      TMP5 = (V2(3)*P1(0)-V2(4)*P1(1)-V2(5)*P1(2)-V2(6)*P1(3))
      TMP4 = (V3(3)*P1(0)-V3(4)*P1(1)-V3(5)*P1(2)-V3(6)*P1(3))
      TMP7 = (V3(3)*P2(0)-V3(4)*P2(1)-V3(5)*P2(2)-V3(6)*P2(3))
      TMP6 = (P3(0)*V1(3)-P3(1)*V1(4)-P3(2)*V1(5)-P3(3)*V1(6))
      TMP3 = (V1(3)*P2(0)-V1(4)*P2(1)-V1(5)*P2(2)-V1(6)*P2(3))
      TMP2 = (P3(0)*V2(3)-P3(1)*V2(4)-P3(2)*V2(5)-P3(3)*V2(6))
      VERTEX = COUP*1D0/2D0*(TMP11*(-CI*(TMP33+TMP34)+CI*(TMP35+TMP36))
     $ +(TMP13*(-CI*(TMP38+TMP40)+CI*(TMP37+TMP39))+(TMP8*(-CI*(TMP30
     $ +TMP32)+CI*(TMP29+TMP31))+(TMP2*2D0*(-CI*(TMP23)+CI*(TMP24))
     $ +(TMP3*2D0*(-CI*(TMP17)+CI*(TMP18))+(TMP4*2D0*(-CI*(TMP26)+CI
     $ *(TMP25))+(TMP5*2D0*(-CI*(TMP22)+CI*(TMP21))+(TMP6*2D0*(-CI
     $ *(TMP19)+CI*(TMP20))+(TMP7*2D0*(-CI*(TMP28)+CI*(TMP27))+(+4D0 *
     $  CI*(TMP12*TMP14+TMP10*TMP15+TMP9*TMP16)))))))))))
      END


